#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os

import yaml


class AllPlaybook(object):

    def get_dest_path(self):
        return os.path.abspath(os.path.join(
            os.path.dirname(__file__), "..", "all.yml"))

    def get_src_path(self, env):
        return os.path.abspath(os.path.join(
            os.path.dirname(__file__), "..", "inventories", "{}.yml".format(env)))

    def conv_data(self, groups):
        return [
            {"import_playbook": "{}.yml".format(group_name)}
            for group_name in groups]

    def run(self, env):
        with open(self.get_src_path(env)) as r:
            data = yaml.load(r)
        groups = data["all"]["children"].keys()
        with open(self.get_dest_path(), "w") as w:
            w.write(
                "---\n"
                "# Don't edit this file directly.\n"
                "# This file is generated by make-all-playbook command.\n"
                "# This file should be included in .gitignore.\n")
            yaml.dump(self.conv_data(groups), w)
